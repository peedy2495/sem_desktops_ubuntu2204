- hosts: cc02
  gather_facts: true
  vars:
    ansible_become: no
    ansible_ssh_common_args: "-o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no"
    keyFilePath: "/tmp/semaphore/.ssh/gh_ansible-globals"
    gitlab_remote_prefix: "http://gitlab.we.goat/we"
  vars_files:
    - /var/lib/semaphore/data/sec.yml

  tasks:

    - name: git - load playbooks
      ansible.builtin.slurp:
        src: "{{ playbook_dir }}/files/playbooks.yml"
      delegate_to: localhost
      register: playbooks_content

    - name: git - load requirements
      ansible.builtin.slurp:
        src: "{{ playbook_dir }}/roles/requirements.yml"
      delegate_to: localhost
      register: requirements_content

    - name: git - cocatentate the lists
      ansible.builtin.set_fact:
        git_repos: "{{
          playbooks_content['content'] | b64decode | from_yaml + 
          requirements_content['content'] | b64decode | from_yaml
          }}"

    - name: git - create tempdir for caching
      ansible.builtin.file:
        path: /tmp/export/git
        state: directory
        mode: 0777

    - name: create user ssh directory
      ansible.builtin.file:
        path: /tmp/semaphore/.ssh
        state: directory

    - name: deploy temporary keyfile
      ansible.builtin.copy:
        content: "{{ gh_ssh_key }}"
        dest: "{{ keyFilePath }}"
        mode: 0600

    - name: git - clone repositories
      ansible.builtin.git:
        repo: "{{ item.src }}"
        #version: "{{ item.version }}"
        dest: "/tmp/export/git/{{ item.src | regex_replace('^.*/', '') | replace('.git', '') }}"
        accept_hostkey: yes
        key_file: "{{ keyFilePath }}"
        clone: true
        force: true
        update: true
      with_items: "{{ git_repos }}"
      when: item.scm == 'git'

    - name: remove private key
      ansible.builtin.file:
        path: "{{ keyFilePath }}"
        state: absent

    - name: git - change remote url
      ansible.builtin.replace:
        path: "/tmp/export/git/{{ item.src | regex_replace('^.*/', '') | replace('.git', '') }}/.git/config"
        regexp: "{{ item.src }}"
        replace: "{{ gitlab_rempote_prefix }}/{{ item.src | regex_replace('^.*/', '') | replace('.git', '') }}"
      with_items: "{{ git_repos }}"
      when: item.scm == 'git'

    - name: git - create compressed export archive
      ansible.builtin.archive:
        path:
          - /tmp/export/git
        dest: /tmp/export/trans_infra.tgz